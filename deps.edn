{:paths ["src" "resources"]
 :jvm-opts ["-Djava.util.logging.config.file=logging.properties"]
 :deps
 {org.clojure/clojure {:mvn/version "1.10.1"}
  org.clojure/core.match {:mvn/version "1.0.1"}
  org.clojure/core.async {:mvn/version "1.5.648"}
  org.clojure/math.numeric-tower {:mvn/version "0.0.4"}
  com.taoensso/timbre {:mvn/version "6.0.4"}
  dm3/stopwatch {:mvn/version "0.1.1" :exclusions [org.clojure/clojurescript]}
  org.apache.commons/commons-math3 {:mvn/version "3.6.1"}
  org.babashka/sci {:mvn/version "0.7.39"}
  org.mentat/clerk-utils {:local/root "../clerk-utils"}}

 :aliases
 {:dev
  {:extra-paths ["dev"]
   :extra-deps
   {io.github.nextjournal/clerk {:git/sha "4329fa31b75bf26c04bdcc803a52fe642baec56e"}}
   :jvm-opts ["-Xms6g" "-Xmx8g" "-server"]}

  ;; This entry sets up the REPL environment for local development. Run a full
  ;; repl with `clj -M:test:dev:repl`.
  :repl
  {:main-opts
   ["-e"
    "(do (require 'emmy.env) (in-ns 'emmy.env) (println \"Clojure\" (clojure-version)))"
    "-r"]}

  :cljs
  {:extra-deps
   {thheller/shadow-cljs {:mvn/version "2.20.14"}
    org.clojure/clojurescript {:mvn/version "1.11.60"}}}

  :test
  ;; layer this in to get access to everything in the test directory, plus the
  ;; dependencies needed to run the tests.
  {:extra-paths ["test"]
   :extra-deps
   {com.gfredericks/test.chuck {:mvn/version "0.2.14"}
    io.github.cognitect-labs/test-runner
    {:git/tag "v0.5.0" :git/sha "b3fd0d2"}
    org.clojure/test.check {:mvn/version "1.1.1"}
    same/ish {:mvn/version "0.1.4"}}}

  ;; See https://github.com/cognitect-labs/test-runner for invocation
  ;; instructions, or call `clojure -X:test:runner`.
  :runner
  {:main-opts ["-m" "cognitect.test-runner"]
   :exec-fn cognitect.test-runner.api/test
   :exec-args ["test"]}

  :nextjournal/clerk
  {:extra-paths ["dev"]
   :extra-deps
   {org.clojure/clojure       {:mvn/version "1.11.1"}
    org.clojure/clojurescript {:mvn/version "1.11.60"}
    io.github.nextjournal/clerk
    {:git/sha "4329fa31b75bf26c04bdcc803a52fe642baec56e"}
    io.github.nextjournal/clerk.render
    {:git/url "https://github.com/nextjournal/clerk"
     :git/sha "4329fa31b75bf26c04bdcc803a52fe642baec56e"
     :deps/root "render"}}
   :exec-fn user/build!}

  :coverage
  ;; Invoke with clj -M:test:coverage <args>
  {:main-opts ["-m" "cloverage.coverage"
               "-p" "src"
               "-s" "test"]
   :extra-deps {cloverage/cloverage {:mvn/version "1.2.4"}}}

  :build
  ;; build.clj tool.
  {:deps {io.github.clojure/tools.build {:git/tag "v0.8.2" :git/sha "ba1a2bf"}
          slipset/deps-deploy {:mvn/version "0.2.0"}}
   :ns-default build}}}
